Задание на ЛР 3.
1.	Предварительно задаться, как критерием, относительной погреш- ностью вычисления значения по формуле: не более 10–7 % и не менее 10–8 %. Данный критерий используется для сравнения с ним погрешности, ко- торая дала программа: погрешность определяется через оценку разности полу- ченного результата и показаний образцового вычислительного средства.
При выходе погрешности за указанный диапазон: а) установить причину таковой ситуации; б) предложить и опробовать изменения в программе, позволяющие ввести погрешность в требуемый диапазон.
2.	Написать скрипт на языке TypeScript для веб-страницы, поз- воляющий:
1)	ввести несколько переменных (аргументов), используя клавиатуру, при этом обеспечив для пользователя представление таблицы–подсказки о вводимых

данных. Формат таблицы отражает величины «Аргументы», «Диапазон аргу- мента» и «Дискрет аргумента». Стиль таблицы выбирает студент;
2)	если значение, вводимое пользователем, не соответствует требуемому диа- пазону аргумента или значению аргумента с учётом дискрета, вывести на экран сообщение об ошибке с просьбой к пользователю ввести корректное значение аргу- мента. Корректное значение, ближайшее к некорректному введённому пользова- телем, может быть введено программой с соответствующим сообщением пользова- телю (при вводе). Обеспечить выбор значения аргумента в заданном для него диапа- зоне с дискретом, отсчитанным как от нижней границы диапазона к верхней, так и от верхней границы к нижней.
Запрос на ввод предоставляет возможность пользователю ввести требуемые данные. Форма запроса выбирается студентом – это или предложение ввести значение конкретного аргумента, или создать таблицу с динамическими ячей- ками, куда пользователь вводит значение аргумента;
3)	для реализации задания предварительно определиться с конкретной раз- рядностью представления результата вычисления по формуле: но при этом ис- пользовать критерий – обеспечить требуемую точность вычисления при мини- мальном требуемом объёме памяти данных.
Этот же критерий использовать для управляющих и вновь создаваемых пере- менных в программе, обеспечивающих её целевую функцию. Все введённые аргу- менты для формулы, результаты вычислений, как промежуточных в самой про- грамме, так и итоговых, представлять десятичными цифрами. Число цифр после запятой не менее шести.
3.	Вычислить значение функции по формуле (вариант индивидуален для каждого студента), используя для вычисления введённые данные.
4.	Вывести на экран пользователю результат вычисления по формуле в виде таблицы с полями «аргумент», «введённое значение аргумента», «результат вычисления» и «погрешность вычисления». В выводимых данных число цифр по- сле запятой не менее шести.

5.	Сформировать мотивированный набор контрольных приме- ров, позволяющих, на ваш взгляд, показать принципиальную работоспособ- ность программы вычисления значения функции в случае сочетания значений ар- гументов, ведущих к коллизии. Набор данных контрольных примеров вводить из файла на диске (носителе). Данный файл сдаётся с отчётом по ЛР при сдаче ра- боты.
6.	Сформировать мотивированный набор тестовых примеров, позволяющих, на ваш взгляд, показать или соответствие требованиям за- дания на ЛР, или наличие несоответствия требованиям задания. Набор дан- ных тестовых примеров вводить из файла на диске (носителе). Данный файл сда- ётся с отчётом по ЛР при сдаче работы.
7.	Задания, выполнение которых требует работу с комплексными чис- лами, должно быть выполнено с обработкой комплексных чисел.
Встроенной поддержки комплексных чисел в языке нет. Поэтому необхо- димо создать собственный класс. В этом классе нужно реализовать хранение дей- ствительной и мнимой части числа (в виде соответствующих свойств Real и Imag- inary). Класс должен включать методы для выполнения арифметических операций сложение, вычитание, умножение и деление. Также нужны методы получения со- пряженного комплексного числа; вычисления модуля и фазы; представления комплексного числа в показательной форме. Нужен метод для вывода комплекс- ного числа в строковом формате.
В плане решения указанных требований рекомендуется использовать информа- цию из глобальной сети Интернет.
8.	Отчётность за ЛР 3: 1) демонстрация работы выполненного задания в браузере: т. е., создание веб-страницы, с возможностью ввода и демонстрации ре- зультата вычислений, и, 2) сдача/защита отчёта по ЛР3 в электронной форме (с обязательным включением необходимых скриншотов и листинга в отчёт, а также предоставить разработанные файл(ы) не позднее 9-й недели семестра; комментарий (подробный) каждой строки кода, связанной с системой типизации языка, обязателен.

Защита в форме доклада с номинальным временем 5 мин в сопровождении презентации; 3) сдать преподавателю файл .html-страницы, файл разработан- ной программы .ts, конфигурационный файл tsconfig.json; файл кон- трольных примеров; файл тестовых примеров; файл отчёта по ЛР3 (в формате текстового редактора);
8.1)	отчёт по ЛР 3 должен иметь следующие структурные элементы, рас- положенные в указанном ниже порядке:
–	титульный лист;
–	задание на ЛР 3;
–	реферат;
–	содержание;
–	определения, обозначения и сокращения;
–	введение;
–	разделы основной части;
–	заключение;
–	список использованных источников;
–	приложение (привести листинг программы, иметь основные коммента- рии, поясняющие разработанную программу, и подробные комментарии строк кода, отражающих систему типизации языка);
8.2)	в первом разделе основной части отчёта описать работу программы (например, можно дать схему работы программы) и изложить ал- горитм решения поставленной задачи (алгоритм показать в графической форме);
8.3)	во втором разделе основной части отчёта дать собственную оценку, на основе написанной программы, относительно системы типизации языка программирования по критериям, сформированным лично и согла- сующимися со сведениями из информационных источников.
Также привести материал, связанный с выбором разрядности данных, их ти- пов, оценкой: а) причины несоответствия заданию полученной погрешности; б) пред- ложения и сведения об опробировании изменений в программе, позволяющих ввести погрешность в требуемый диапазон;
8.4)	во втором разделе отчёта, при формировании собственной оценки ти- пизации в языке TypeScript, в разработанном коде пытайтесь менять используемые

типы переменных с оценкой получаемых результатов, получаемых в ходе исследова- ния.
9) В заключении предложите вашу сравнительную оценку системы типиза- ции языка TypeScript с системой типизации языков из ЛР1 и ЛР2.


В ходе работы над заданием для ЛР3 настоятельно не рекомендуется использовать фреймворки языка TypeScript. В случае применения фреймворка, студент обязан добавить инструкцию и/или необходимые файлы для возможно- сти полноценного запуска выполненной лабораторной работы.
Пример веб-страницы, отражающей результаты подсчёта по формуле, приведён на рисунке 3.0.

Рисунок 3.0 – Пример веб-страницы, отражающей результаты подсчёта по фор- муле



Пример подключения в html-файл веб-страницы созданного файла по ЛР 3:




<script src="src/djakisheva.js"></script>
